name: Release

# on:
#   push:
#     tags:
#       - v[0-9]+.*

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # the create-release would be used once we want to create a specific release based on if the commit has a tag
  # create-release:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: taiki-e/create-gh-release-action@v1
  #       env:
  #         # (required)
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # upload the app package for each target os
  upload-assets:
    strategy:
      matrix:
        os:
          # - ubuntu-18.04
          # - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      # bit-set compilation was broken for now with version 1.55 of rust
      # - name: Install minimal 1.54
      #   uses: actions-rs/toolchain@v1
      #   with:
      #     profile: minimal
      #     toolchain: 1.54
      #     override: true
      # depending on the windows command (when we are ready to build for it), may have to check which os currently on
      - name: Install dependencies
        # if: ${{ runner.os == 'Linux' }}
        # npm run dna-install
        run: |
          npm run web-install
          npm install
          npm run electron-install
          npm run electron-tsc
        # if: ${{ runner.os == 'Windows' }}
        # shell: bash
      - name: build acorn
        run: npm run build
        if: ${{ runner.os == 'Windows' }}
        shell: bash
      - name: upload binary (ubuntu only)
        if: ${{ runner.os == 'Linux' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "test-release" "electron/out/Acorn-0.5.2-alpha.AppImage" --clobber
      - name: upload binary (macos only)
        if: ${{ runner.os == 'macOs' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "test-release" "electron/out/Acorn-0.5.2-alpha.dmg" --clobber
      - name: upload binary (Windows only)
        if: ${{ runner.os == 'Windows' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Copy-Item bin/lair-keystore.exe -Destination lair-keystore-x86_64-pc-windows-msvc.exe
          gh release upload "test-release" "electron/out/Acorn-0.5.2-alpha.exe" --clobber
        shell: bash
